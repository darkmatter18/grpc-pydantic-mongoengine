syntax = "proto3";

package grpc_pydantic_mongoengine.blog;

import "google/protobuf/empty.proto";

import "grpc_pydantic_mongoengine/proto/base/base.proto";

enum Publisher {
    PUBLISHER_UNSPECIFIED = 0;
    TYPE_A = 1;
    TYPE_B = 2;
    TYPE_C = 3;
}

message CreateBlogData {
    string title = 1;
    string description = 2;
    string created_by = 3;
    Publisher publised_via = 4;
}

message UpdateBlogData {
    optional string title = 1;
    optional string description = 2;
    optional string created_by = 3;
    optional Publisher publised_via = 4;
}

message BlogData {
    string title = 1;
    string description = 2;
    string created_by = 3;
    string created_on = 4;
    Publisher publised_via = 5;
    string uuid = 6;
}

message MultiBlogData {
    repeated BlogData data = 1;
}

message UpdateBlogQuery {
    UpdateBlogData new_data = 1;
    grpc_pydantic_mongoengine.base.GetQuery filter = 2;
}

message UpdateMultiBlogQuery {
    UpdateBlogData new_data = 1;
    grpc_pydantic_mongoengine.base.MultiGetQuery filter = 2;
}

service Blog {
    rpc Create (CreateBlogData) returns (BlogData);
    rpc GetByUUID (grpc_pydantic_mongoengine.base.GetByUUIDMsg) returns (BlogData);
    rpc Get (grpc_pydantic_mongoengine.base.GetQuery) returns (BlogData);
    rpc GetMulti (grpc_pydantic_mongoengine.base.MultiGetQuery) returns (MultiBlogData);
    rpc Update (UpdateBlogQuery) returns (BlogData);
    rpc Delete (grpc_pydantic_mongoengine.base.GetQuery) returns (google.protobuf.Empty);
    rpc DeleteMulti (grpc_pydantic_mongoengine.base.MultiGetQuery) returns (google.protobuf.Empty);
    rpc Count (grpc_pydantic_mongoengine.base.MultiGetQuery) returns (grpc_pydantic_mongoengine.base.CountMsg);
}
