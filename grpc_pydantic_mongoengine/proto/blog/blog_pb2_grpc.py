# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from grpc_pydantic_mongoengine.proto.blog import blog_pb2 as grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2


class BlogStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateBlog = channel.unary_unary(
                '/grpc_pydantic_mongoengine.blog.Blog/CreateBlog',
                request_serializer=grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.CreateBlogData.SerializeToString,
                response_deserializer=grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.BlogData.FromString,
                )
        self.GetBlogByUUID = channel.unary_unary(
                '/grpc_pydantic_mongoengine.blog.Blog/GetBlogByUUID',
                request_serializer=grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.GetBlogByUUIDQuery.SerializeToString,
                response_deserializer=grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.BlogData.FromString,
                )
        self.GetBlog = channel.unary_unary(
                '/grpc_pydantic_mongoengine.blog.Blog/GetBlog',
                request_serializer=grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.GetBlogQuery.SerializeToString,
                response_deserializer=grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.BlogData.FromString,
                )
        self.GetMultiBlog = channel.unary_unary(
                '/grpc_pydantic_mongoengine.blog.Blog/GetMultiBlog',
                request_serializer=grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.MultiGetBlogQuery.SerializeToString,
                response_deserializer=grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.MultiBlogData.FromString,
                )
        self.UpdateBlog = channel.unary_unary(
                '/grpc_pydantic_mongoengine.blog.Blog/UpdateBlog',
                request_serializer=grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.UpdateBlogQuery.SerializeToString,
                response_deserializer=grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.BlogData.FromString,
                )
        self.DeleteBlog = channel.unary_unary(
                '/grpc_pydantic_mongoengine.blog.Blog/DeleteBlog',
                request_serializer=grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.GetBlogQuery.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.DeleteMultiBlog = channel.unary_unary(
                '/grpc_pydantic_mongoengine.blog.Blog/DeleteMultiBlog',
                request_serializer=grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.MultiGetBlogQuery.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class BlogServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateBlog(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlogByUUID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlog(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMultiBlog(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBlog(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteBlog(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteMultiBlog(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BlogServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateBlog': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateBlog,
                    request_deserializer=grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.CreateBlogData.FromString,
                    response_serializer=grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.BlogData.SerializeToString,
            ),
            'GetBlogByUUID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlogByUUID,
                    request_deserializer=grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.GetBlogByUUIDQuery.FromString,
                    response_serializer=grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.BlogData.SerializeToString,
            ),
            'GetBlog': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlog,
                    request_deserializer=grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.GetBlogQuery.FromString,
                    response_serializer=grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.BlogData.SerializeToString,
            ),
            'GetMultiBlog': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMultiBlog,
                    request_deserializer=grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.MultiGetBlogQuery.FromString,
                    response_serializer=grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.MultiBlogData.SerializeToString,
            ),
            'UpdateBlog': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBlog,
                    request_deserializer=grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.UpdateBlogQuery.FromString,
                    response_serializer=grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.BlogData.SerializeToString,
            ),
            'DeleteBlog': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteBlog,
                    request_deserializer=grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.GetBlogQuery.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DeleteMultiBlog': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteMultiBlog,
                    request_deserializer=grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.MultiGetBlogQuery.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpc_pydantic_mongoengine.blog.Blog', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Blog(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateBlog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc_pydantic_mongoengine.blog.Blog/CreateBlog',
            grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.CreateBlogData.SerializeToString,
            grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.BlogData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBlogByUUID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc_pydantic_mongoengine.blog.Blog/GetBlogByUUID',
            grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.GetBlogByUUIDQuery.SerializeToString,
            grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.BlogData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBlog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc_pydantic_mongoengine.blog.Blog/GetBlog',
            grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.GetBlogQuery.SerializeToString,
            grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.BlogData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMultiBlog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc_pydantic_mongoengine.blog.Blog/GetMultiBlog',
            grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.MultiGetBlogQuery.SerializeToString,
            grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.MultiBlogData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateBlog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc_pydantic_mongoengine.blog.Blog/UpdateBlog',
            grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.UpdateBlogQuery.SerializeToString,
            grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.BlogData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteBlog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc_pydantic_mongoengine.blog.Blog/DeleteBlog',
            grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.GetBlogQuery.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteMultiBlog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc_pydantic_mongoengine.blog.Blog/DeleteMultiBlog',
            grpc__pydantic__mongoengine_dot_proto_dot_blog_dot_blog__pb2.MultiGetBlogQuery.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
